library(glmmADMB)
?glmmadmb
data(epil2)
epil2$subject <- factor(epil2$subject)#
(fm <- glmmadmb(y~Base*trt+Age+Visit+(Visit|subject),#
data=epil2, family="nbinom"))
(fm2 <- glmmadmb(y~Base*trt+Age+Visit+(Visit|subject),#
data=epil2, family="nbinom1")
)
dp=sim_rand_walk()
dp
os=fit_randwalk(dp$Ldat, dp$Lpin)
dp=sim_randwalk()
dp= randwalk:::sim_randwalk()
os=randwalk:::fit_randwalk(dp$Ldat, dp$Lpin)
library(randwalk)
ni=10#
ny=15#
sdi=10#
sdy=10#
sdresid=.5#
rei=rnorm(ni, sd=sdi)#
rey=rnorm(ny, sd=sdy)#
#
dat=expand.grid(i=1:ni, y=1:ny) #
dat=transform(dat, obs=rnorm(n=ni*ny, mean=rei[i]+rey[y], sd=sdresid))
dat
library(TMB)#
compile("REiy.cpp")#
dyn.load("REiy.so")
opty$par
library(TMB)#
compile("REiy.cpp")#
dyn.load("REiy.so")#
#
s=1#
set.seed(s)#
#
ni=10#
ny=15#
sdi=10#
sdy=10#
sdresid=.5#
rei=rnorm(ni, sd=sdi)#
rey=rnorm(ny, sd=sdy)#
#
dat=expand.grid(i=1:ni, y=1:ny) #
dat=transform(dat, obs=rnorm(n=ni*ny, mean=rei[i]+rey[y], sd=sdresid))#
#
data=list(obs=dat$obs, io=dat$i-1, yo=dat$y-1)#
pars=list(rei=rep(0, ni), rey=rep(0, ny), logsdresid=0, logsdy=0, logsdi=0)#
#
mod=MakeADFun(data, pars, random=c("rei", "rey"), DLL="REiy")#
opt= nlminb(mod $par, mod $fn, mod $gr)
runExample("simple")
rwm <- mcmc(obj=obj, nsim=500*8, algorithm='RWM', params.init=opt$par,#
alpha=.08, diagnostic=TRUE)
rwm <- mcmc(obj=obj, nsim=500*8, algorithm='RWM', params.init=opt$par,#
alpha=.08, diagnostic=FALSE)
str(rwm)
?mcmc
library(TMB)
library(devtools)
?create
create()
create(path="")
create(path=".")
create(path="mews")
library(mews)#
nobs=1000#
R0=8#
m=-.03#
theta=15#
sigma=.2#
t=seq(1,150, length=nobs)#
X0=18#
-R0/tail(t,1)#
log_a=log(1+m*tail(t,1)/R0)#
ptrue=list(R0=R0, m=m, log_theta=log(theta), log_sigma=log(sigma))#
ptruebnd=list(log_R0=log(R0), log_a=log_a, log_theta=log(theta), log_sigma=log(sigma))#
#
object=list(X=data.frame(time=t, value=c(X0, rep(NA, length(t)-1))), #
	pars=c(R0=R0, m=m, theta=theta, sigma=sigma), #
	model="LSN", #
	loglik = NA,#
	convergence=0)#
class(object) <- c("mews", "list")#
#
sim <- simulate(object)
library(deSolve)
sim <- simulate(object)
? lsoda
A= stability_model_TMB(sim,"OU")
A= stability_model(sim,"OU")
B=stability_model(sim, "LSN")
observed <- -2 * (logLik(A) - logLik(B))#
reps <- lapply(1:500, function(i) compare(A,B))#
lr <- lik_ratios(reps)#
roc <- roc_data(lr)#
require(ggplot2)#
ggplot(lr) + geom_density(aes(value, fill=simulation), alpha=0.6) + geom_vline(aes(xintercept=observed))
observed <- -2 * (logLik(A) - logLik(B))
reps <- lapply(1:500, function(i) compare(A,B))
library(mews)#
nobs=1000#
R0=8#
m=-.03#
theta=15#
sigma=.2#
t=seq(1,150, length=nobs)#
X0=18#
-R0/tail(t,1)#
log_a=log(1+m*tail(t,1)/R0)#
ptrue=list(R0=R0, m=m, log_theta=log(theta), log_sigma=log(sigma))#
ptruebnd=list(log_R0=log(R0), log_a=log_a, log_theta=log(theta), log_sigma=log(sigma))#
#
object=list(X=data.frame(time=t, value=c(X0, rep(NA, length(t)-1))), #
	pars=c(R0=R0, m=m, theta=theta, sigma=sigma), #
	model="LSN", #
	loglik = NA,#
	convergence=0)#
class(object) <- c("mews", "list")#
#
sim <- simulate(object)#
plot(sim[,1], sim[,2])
p <- list(log_R0=log(1/max(time(sim[,1]))), m=0, log_theta=log(mean(sim[,2])), log_sigma=log(sd(sim[,2])))#
f2 <- MakeADFun(data=list(times= sim[,1], obs= sim[,2]), parameters=p, DLL="OU")    #
o <- nlminb(f2 $par, f2 $fn, f2 $gr)#
p_est <- o$par  # & use the OU estimated pars as starting guess#
p_est["R0"]=exp(p_est["log_R0"])#
R0 <- as.numeric(p_est["R0"]^2)#
theta <- as.numeric(exp(p_est["log_theta"])+p_est["R0"])#
sigma <- as.numeric(abs(exp(p_est["log_sigma"])/sqrt(2*p_est["R0"]+ exp(p_est["log_theta"]))))#
p <- list(log_R0=log(R0), log_a=0, log_theta=log(theta), log_sigma=log(sigma))#
#p <- list(log_R0=log(1), log_a=0, log_theta=log(1), log_sigma=log(1), R0=.1)#
f3 <- MakeADFun(data=list(times=sim[,1], obs= sim[,2]), parameters=p, DLL="LSN")#
#f3$env$tracepar=TRUE#
o <- nlminb(f3 $par, f3 $fn, f3 $gr)#
#
f4 <- MakeADFun(data=list(times=sim[,1], obs= sim[,2]), parameters=ptruebnd, DLL="LSN")#
#f4$env$tracepar=TRUE#
o2 <- nlminb(f4 $par, f4 $fn, f4 $gr)#
#
o$par#
ptruebnd#
#
o$objective#
f4 $fn(ptruebnd)
A= stability_model_mews(sim,"OU")
B=stability_model_mews(sim, "LSN")
observed <- -2 * (logLik(A) - logLik(B))#
reps <- lapply(1:500, function(i) compare(A,B))
library(parallel)
??parLapply
reps <- lapply(1:100, function(i) compare(A,B))
lr <- lik_ratios(reps)#
roc <- roc_data(lr)#
require(ggplot2)#
ggplot(lr) + geom_density(aes(value, fill=simulation), alpha=0.6) + geom_vline(aes(xintercept=observed))#
ggplot(roc) + geom_line(aes(False.positives, True.positives))
ggplot(lr) + geom_density(aes(value, fill=simulation), alpha=0.6) + geom_vline(aes(xintercept=observed))
