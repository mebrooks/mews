summary(m1.tmb)
install.packages("roxygen")
library(roxygen2)
sessionInfo()
install.packages(#
'printr',#
type = 'source',#
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')#
)
vignette('printr', package = 'printr')
formulaM
library(TMB)#
library(ggplot2)#
library(plyr)#
library(dplyr)#
source("../utilities.R")#
#
rando=c("indiv_growth_dev", "year_growth_dev", "w")#
load("data scaled for latent growth model mum 4.Rdata")#
rando2=c("indiv_growth_dev", "indiv_age_growth_dev", "year_growth_dev", "w")#
#
compile("growth_basic.cpp")#
dyn.load("growth_basic.so")#
compile("growth_ageREcor_nocohort.cpp")#
dyn.load("growth_ageREcor_nocohort.so")#
load("topmodels_ageREcor_nocohort.Rdata")#
#
formulaX=as.formula(as.character(topforms[1,]$formulaX))#
formulaM= as.formula(as.character(topforms[1,]$formulaM))#
#
c1=extract_coefs(topmods[[1]])[-c(1:2),]#
c1$var=factor(c1$var, levels=c1$var[length(c1$var):1])#
c1$model="best"#
#
Lpin_indiv =Lpin#
Lpin_indiv$log_indiv_growth_sd=log(1/sqrt(2*pi))#
Lpin_indiv$indiv_growth_dev=rep(0, length(Lpin$indiv_growth_dev))#
#
map_indiv=list(#
log_indiv_growth_sd=as.factor(NA), #
indiv_growth_dev=as.factor(rep(NA, length(Lpin$indiv_growth_dev))))#
#
m_indiv = growmod(Ldat, Lpin_indiv, #
formulaX, #
formulaM, #
random=rando, DLL="growth_basic", map=map_indiv)#
c2=extract_coefs(m_indiv)[-c(1:2),]#
c2$var=factor(c2$var, levels=c2$var[length(c2$var):1])#
c2$model="sigma_indiv=0"
citation("TMB")
8829.94+537.05
citation()
install.packages("gdata")
?choose
choose(5,2)
source("../../../utilities.R")
source("../../../../utilities.R")
source("../../utilities.R")
getwd()
24/60
20*8.4
library(glmmADMB)
?glmmadmb
data(epil2)
epil2$subject <- factor(epil2$subject)#
(fm <- glmmadmb(y~Base*trt+Age+Visit+(Visit|subject),#
data=epil2, family="nbinom"))
(fm2 <- glmmadmb(y~Base*trt+Age+Visit+(Visit|subject),#
data=epil2, family="nbinom1")
)
dp=sim_rand_walk()
dp
os=fit_randwalk(dp$Ldat, dp$Lpin)
dp=sim_randwalk()
dp= randwalk:::sim_randwalk()
os=randwalk:::fit_randwalk(dp$Ldat, dp$Lpin)
library(randwalk)
ni=10#
ny=15#
sdi=10#
sdy=10#
sdresid=.5#
rei=rnorm(ni, sd=sdi)#
rey=rnorm(ny, sd=sdy)#
#
dat=expand.grid(i=1:ni, y=1:ny) #
dat=transform(dat, obs=rnorm(n=ni*ny, mean=rei[i]+rey[y], sd=sdresid))
dat
library(TMB)#
compile("REiy.cpp")#
dyn.load("REiy.so")
opty$par
library(TMB)#
compile("REiy.cpp")#
dyn.load("REiy.so")#
#
s=1#
set.seed(s)#
#
ni=10#
ny=15#
sdi=10#
sdy=10#
sdresid=.5#
rei=rnorm(ni, sd=sdi)#
rey=rnorm(ny, sd=sdy)#
#
dat=expand.grid(i=1:ni, y=1:ny) #
dat=transform(dat, obs=rnorm(n=ni*ny, mean=rei[i]+rey[y], sd=sdresid))#
#
data=list(obs=dat$obs, io=dat$i-1, yo=dat$y-1)#
pars=list(rei=rep(0, ni), rey=rep(0, ny), logsdresid=0, logsdy=0, logsdi=0)#
#
mod=MakeADFun(data, pars, random=c("rei", "rey"), DLL="REiy")#
opt= nlminb(mod $par, mod $fn, mod $gr)
runExample("simple")
rwm <- mcmc(obj=obj, nsim=500*8, algorithm='RWM', params.init=opt$par,#
alpha=.08, diagnostic=TRUE)
rwm <- mcmc(obj=obj, nsim=500*8, algorithm='RWM', params.init=opt$par,#
alpha=.08, diagnostic=FALSE)
str(rwm)
?mcmc
library(TMB)
library(devtools)
?create
create()
create(path="")
create(path=".")
create(path="mews")
